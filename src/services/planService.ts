import axios from "axios";

const API_URL_AI = "http://localhost:5003/Ai-schedule"; // ‚úÖ BE endpoint
const API_URL_Schedule = "http://localhost:5003/schedule"; // ‚úÖ BE endpoint

export const planService = {
  async generatePlan(userInfo: any) {
    try {
      const response = await axios.post(`${API_URL_AI}/generate-plan-2step`, userInfo, {
        headers: { "Content-Type": "application/json" },
      });
      return response.data; // { step, userInfo, nutrition, mealPlan }
    } catch (error: any) {
      console.error("‚ùå mealService.generatePlan error:", error);
      throw new Error(error.response?.data?.error || "Kh√¥ng th·ªÉ t·∫°o k·∫ø ho·∫°ch ƒÉn u·ªëng");
    }
  },

  async generateNutrition(userInfo: any) {
    return axios.post(`${API_URL_AI}/generate-nutrition`, userInfo, {
      headers: { "Content-Type": "application/json" },
    });
  },

  async generateMealPlan(userInfo: any, nutrition: any) {
    return axios.post(`${API_URL_AI}/generate-meal-plan`, { userInfo, nutrition }, {
      headers: { "Content-Type": "application/json" },
    });
  },

  // üÜï L·∫•y danh s√°ch l·ªãch tr√¨nh c·ªßa user
  async getUserSchedules(token: string) {
    try {
      const res = await axios.get(`${API_URL_Schedule}/get-me`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      return res.data;
    } catch (error: any) {
      if (error.response?.status === 404) {
        console.warn("‚ö†Ô∏è Ng∆∞·ªùi d√πng ch∆∞a c√≥ l·ªãch tr√¨nh n√†o");
        return { schedules: [] }; // üëâ Tr·∫£ v·ªÅ m·∫£ng r·ªóng thay v√¨ throw
      }
      console.error("‚ùå planService.getUserSchedules error:", error);
      throw new Error(error.response?.data?.message || "Kh√¥ng th·ªÉ l·∫•y danh s√°ch l·ªãch tr√¨nh");
    }
  },

  // üÜï L·∫•y chi ti·∫øt 1 l·ªãch tr√¨nh (n·∫øu c·∫ßn sau n√†y)
  async getFullSchedule(id: string, token: string) {
    try {
      const res = await axios.get(`${API_URL_Schedule}/get-schedule/${id}`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      return res.data;
    } catch (error: any) {
      console.error("‚ùå planService.getFullSchedule error:", error);
      throw new Error(error.response?.data?.message || "Kh√¥ng th·ªÉ l·∫•y chi ti·∫øt l·ªãch tr√¨nh");
    }
  },
  // üÜï T·∫°o l·ªãch tr√¨nh m·ªõi (l∆∞u v√†o DB)
  async createFullSchedule(scheduleData: any, token: string) {
    try {
      // ‚öôÔ∏è Map mealType ƒë√∫ng v·ªõi enum BE ["s√°ng", "ph·ª• s√°ng", "tr∆∞a", "chi·ªÅu", "t·ªëi"]
      const normalizedSchedule = {
        ...scheduleData,
        schedule: scheduleData.schedule.map((day: any) => ({
          ...day,
          meals: day.meals.map((meal: any) => ({
            ...meal,
            mealType:
              meal.mealType?.toLowerCase().includes("ph·ª•") ? "ph·ª• s√°ng" :
              meal.mealType?.toLowerCase().includes("s√°ng") ? "s√°ng" :
              meal.mealType?.toLowerCase().includes("tr∆∞a") ? "tr∆∞a" :
              meal.mealType?.toLowerCase().includes("chi·ªÅu") ? "chi·ªÅu" :
              meal.mealType?.toLowerCase().includes("t·ªëi") ? "t·ªëi" :
              "kh√°c",
          })),
        })),
      };
  
      const res = await axios.post(
        `${API_URL_Schedule}/create-schedule`,
        normalizedSchedule,
        {
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${token}`,
          },
        }
      );
  
      return res.data;
    } catch (error: any) {
      console.error("‚ùå planService.createFullSchedule error:", error);
      throw new Error(error.response?.data?.message || "Kh√¥ng th·ªÉ t·∫°o l·ªãch tr√¨nh");
    }
  },  

  // üÜï L·∫•y b·ªØa ƒÉn ti·∫øp theo trong l·ªãch tr√¨nh ƒëang active
  async getNextMeal(token: string) {
    try {
      const res = await axios.get(`${API_URL_Schedule}/next-meal`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      return res.data; // { message, meal, scheduleInfo, ... }
    } catch (error: any) {
      console.error("‚ùå planService.getNextMeal error:", error);
      throw new Error(error.response?.data?.message || "Kh√¥ng th·ªÉ l·∫•y b·ªØa ƒÉn k·∫ø ti·∫øp");
    }
  },

};

